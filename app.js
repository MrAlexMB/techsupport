// TechSupport Pro JavaScript

document.addEventListener('DOMContentLoaded', function() {
    // Mobile Navigation
    const navToggle = document.getElementById('nav-toggle');
    const navMenu = document.querySelector('.nav__menu');
    
    if (navToggle) {
        navToggle.addEventListener('click', function() {
            navMenu.classList.toggle('active');
        });
    }

    // Smooth scrolling for navigation links
    const navLinks = document.querySelectorAll('.nav__link');
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const targetId = this.getAttribute('href');
            const targetElement = document.querySelector(targetId);
            
            if (targetElement) {
                targetElement.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
            
            // Close mobile menu if open
            if (navMenu) {
                navMenu.classList.remove('active');
            }
        });
    });

    // Hero CTA buttons
    const getSupportBtn = document.getElementById('get-support');
    const viewServicesBtn = document.getElementById('view-services');
    
    if (getSupportBtn) {
        getSupportBtn.addEventListener('click', function() {
            const contactSection = document.querySelector('#contact');
            if (contactSection) {
                contactSection.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    }
    
    if (viewServicesBtn) {
        viewServicesBtn.addEventListener('click', function() {
            const servicesSection = document.querySelector('#services');
            if (servicesSection) {
                servicesSection.scrollIntoView({
                    behavior: 'smooth'
                });
            }
        });
    }

    // Service card buttons
    const serviceButtons = document.querySelectorAll('.service-card__btn');
    serviceButtons.forEach(button => {
        button.addEventListener('click', function() {
            const service = this.getAttribute('data-service');
            showServiceModal(service);
        });
    });

    // Portfolio filtering
    const portfolioFilters = document.querySelectorAll('.portfolio__filter');
    const portfolioItems = document.querySelectorAll('.portfolio__item');

    portfolioFilters.forEach(filter => {
        filter.addEventListener('click', function() {
            const filterValue = this.getAttribute('data-filter');
            
            // Update active filter
            portfolioFilters.forEach(f => f.classList.remove('portfolio__filter--active'));
            this.classList.add('portfolio__filter--active');
            
            // Filter items
            portfolioItems.forEach(item => {
                const category = item.getAttribute('data-category');
                
                if (filterValue === 'all' || category === filterValue) {
                    item.classList.remove('hidden');
                } else {
                    item.classList.add('hidden');
                }
            });
        });
    });

    // Contact form
    const contactForm = document.querySelector('.contact__form');
    if (contactForm) {
        contactForm.addEventListener('submit', function(e) {
            e.preventDefault();
            handleContactForm();
        });
    }

    // Chat widgets - Fixed implementation
    const telegramChatBtn = document.getElementById('telegram-chat');
    const aiChatBtn = document.getElementById('ai-chat');
    const modalOverlay = document.getElementById('modal-overlay');

    console.log('Telegram chat button:', telegramChatBtn);
    console.log('AI chat button:', aiChatBtn);

    if (telegramChatBtn) {
        telegramChatBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('Telegram chat clicked');
            openModal('telegram-modal');
        });
    }

    if (aiChatBtn) {
        aiChatBtn.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            console.log('AI chat clicked');
            openModal('ai-modal');
        });
    }

    // Modal close buttons
    const closeButtons = document.querySelectorAll('.chat-modal__close');
    closeButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            const modalId = this.getAttribute('data-modal');
            closeModal(modalId);
        });
    });

    // Overlay click to close
    if (modalOverlay) {
        modalOverlay.addEventListener('click', function() {
            closeAllModals();
        });
    }

    // Telegram bot quick replies
    const quickReplies = document.querySelectorAll('.quick-reply');
    quickReplies.forEach(reply => {
        reply.addEventListener('click', function(e) {
            e.preventDefault();
            const replyText = this.getAttribute('data-reply');
            handleTelegramReply(replyText);
        });
    });

    // AI chat input - Fixed implementation
    const aiInput = document.getElementById('ai-input');
    const aiSendBtn = document.getElementById('ai-send');

    if (aiSendBtn) {
        aiSendBtn.addEventListener('click', function(e) {
            e.preventDefault();
            sendAiMessage();
        });
    }

    if (aiInput) {
        aiInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                sendAiMessage();
            }
        });
    }

    // Header scroll effect
    window.addEventListener('scroll', function() {
        const header = document.querySelector('.header');
        if (header) {
            if (window.scrollY > 100) {
                header.style.background = 'rgba(var(--color-surface-rgb, 255, 255, 255), 0.95)';
                header.style.backdropFilter = 'blur(10px)';
            } else {
                header.style.background = 'var(--color-surface)';
                header.style.backdropFilter = 'none';
            }
        }
    });

    // Initialize animations
    animateOnScroll();
});

// Chat bot responses data
const chatbotData = {
    telegram: {
        greeting: "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏. –ö–∞–∫ –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å —Å–µ–≥–æ–¥–Ω—è?",
        responses: {
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞": "üõ†Ô∏è –ù–∞—à–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç:\n‚Ä¢ –ü–æ–º–æ—â—å 24/7\n‚Ä¢ –£–¥–∞–ª–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n‚Ä¢ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º\n‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º\n‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏\n\n–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å? –ó–≤–æ–Ω–∏—Ç–µ +7 (495) 123-45-67",
            "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞": "üåê –£—Å–ª—É–≥–∏ –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:\n‚Ä¢ –°–∞–π—Ç—ã –ø–æ–¥ –∫–ª—é—á\n‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω\n‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CMS\n‚Ä¢ E-commerce —Ä–µ—à–µ–Ω–∏—è\n\n–û–±—ã—á–Ω—ã–µ —Å—Ä–æ–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞: 2-4 –Ω–µ–¥–µ–ª–∏",
            "–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–æ–≤": "ü§ñ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Telegram-–±–æ—Ç–æ–≤:\n‚Ä¢ –ò–ò-–±–æ—Ç—ã\n‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –±–∏–∑–Ω–µ—Å–∞\n‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API\n‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n\n–û—Ç 30,000 —Ä—É–±–ª–µ–π",
            "–¶–µ–Ω—ã": "üí∞ –ù–∞—à–∏ —Ü–µ–Ω—ã:\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: –æ—Ç 3,500‚ÇΩ/–º–µ—Å—è—Ü\n‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤: –æ—Ç 70,000‚ÇΩ\n‚Ä¢ Telegram-–±–æ—Ç—ã: –æ—Ç 30,000‚ÇΩ\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞!",
            "–ö–æ–Ω—Ç–∞–∫—Ç—ã": "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (495) 123-45-67\nEmail: info@techsupportpro.ru\n\n–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:\n–ü–Ω-–ü—Ç: 9:00-21:00\n–°–±-–í—Å: 10:00-18:00"
        }
    },
    ai: {
        greeting: "–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à –ò–ò –ø–æ–º–æ—â–Ω–∏–∫. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç–µ –º–≥–Ω–æ–≤–µ–Ω–Ω—É—é –ø–æ–º–æ—â—å!",
        responses: {
            services: "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª—É–≥–∏: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–º–æ—â—å –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ), –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ (—Å–∞–π—Ç—ã –ø–æ–¥ –∫–ª—é—á –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è) –∏ –°–æ–∑–¥–∞–Ω–∏–µ Telegram-–±–æ—Ç–æ–≤ (–ò–ò-—Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏). –û —á–µ–º —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ?",
            pricing: "–ù–∞—à–∏ —Ü–µ–Ω—ã –≤–∞—Ä—å–∏—Ä—É—é—Ç—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª—É–≥–∏: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç 3,500‚ÇΩ/–º–µ—Å—è—Ü, –í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç 70,000‚ÇΩ –∑–∞ –ø—Ä–æ–µ–∫—Ç, Telegram-–±–æ—Ç—ã –æ—Ç 30,000‚ÇΩ. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–∞—à–∏—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π.",
            support: "–ù–∞—à–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–∫–ª—é—á–∞–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—É—é –ø–æ–º–æ—â—å, –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ. –ú—ã –¥–æ—Å—Ç—É–ø–Ω—ã 24/7 —Å–æ —Å—Ä–µ–¥–Ω–∏–º –≤—Ä–µ–º–µ–Ω–µ–º –æ—Ç–≤–µ—Ç–∞ –º–µ–Ω–µ–µ 30 –º–∏–Ω—É—Ç.",
            development: "–ü—Ä–æ—Ü–µ—Å—Å –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤–∫–ª—é—á–∞–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –¥–∏–∑–∞–π–Ω, —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫. –ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –¥–ª—è –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤. –û–±—ã—á–Ω—ã–µ —Å—Ä–æ–∫–∏ 2-4 –Ω–µ–¥–µ–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.",
            bots: "–ú—ã —Å–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö Telegram-–±–æ—Ç–æ–≤ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –ò–ò, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–æ–π, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ API –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤, –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ª–∏–¥–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤.",
            contact: "–í—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +7 (495) 123-45-67 –∏–ª–∏ email info@techsupportpro.ru. –ù–∞—à–∏ —Ä–∞–±–æ—á–∏–µ —á–∞—Å—ã: –ü–Ω-–ü—Ç 9:00-21:00, –°–±-–í—Å 10:00-18:00. –ú—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –ú–æ—Å–∫–≤–µ.",
            default: "–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞—à–µ–π —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–µ, –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ —É—Å–ª—É–≥–∞—Ö —Å–æ–∑–¥–∞–Ω–∏—è Telegram-–±–æ—Ç–æ–≤. –ö–∞–∫–∏–µ —É –≤–∞—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã?"
        }
    }
};

// Modal functions - Fixed implementation
function openModal(modalId) {
    console.log('Opening modal:', modalId);
    const modal = document.getElementById(modalId);
    const overlay = document.getElementById('modal-overlay');
    
    if (modal && overlay) {
        modal.classList.remove('hidden');
        overlay.classList.remove('hidden');
        console.log('Modal opened successfully');
        
        // Focus on input if it's AI modal
        if (modalId === 'ai-modal') {
            setTimeout(() => {
                const aiInput = document.getElementById('ai-input');
                if (aiInput) {
                    aiInput.focus();
                }
            }, 100);
        }
    } else {
        console.error('Modal or overlay not found:', { modal, overlay });
    }
}

function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    const overlay = document.getElementById('modal-overlay');
    
    if (modal && overlay) {
        modal.classList.add('hidden');
        overlay.classList.add('hidden');
    }
}

function closeAllModals() {
    const modals = document.querySelectorAll('.chat-modal');
    const overlay = document.getElementById('modal-overlay');
    
    modals.forEach(modal => {
        modal.classList.add('hidden');
    });
    
    if (overlay) {
        overlay.classList.add('hidden');
    }
}

// Service modal function
function showServiceModal(service) {
    const serviceInfo = {
        support: {
            title: "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
            content: "–ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç–µ–π, –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º –∏ IT-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å–∞ –ª—é–±–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞."
        },
        web: {
            title: "–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", 
            content: "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å–∞–π—Ç–æ–≤ –ø–æ–¥ –∫–ª—é—á, –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å CMS –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π."
        },
        bots: {
            title: "Telegram-–±–æ—Ç—ã",
            content: "–ò–ò-–±–æ—Ç—ã –¥–ª—è Telegram, —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤."
        }
    };

    if (serviceInfo[service]) {
        alert(`${serviceInfo[service].title}\n\n${serviceInfo[service].content}\n\n–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏!`);
    }
}

// Telegram chat functions
function handleTelegramReply(replyText) {
    const messagesContainer = document.getElementById('telegram-messages');
    
    if (!messagesContainer) return;
    
    // Add user message
    addMessage(messagesContainer, replyText, 'user');
    
    // Add bot response after delay
    setTimeout(() => {
        const response = chatbotData.telegram.responses[replyText] || "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å. –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.";
        addMessage(messagesContainer, response, 'bot');
    }, 1000);
}

// AI chat functions - Fixed implementation
function sendAiMessage() {
    const input = document.getElementById('ai-input');
    const messagesContainer = document.getElementById('ai-messages');
    
    if (!input || !messagesContainer) {
        console.error('AI input or messages container not found');
        return;
    }
    
    const message = input.value.trim();
    
    if (!message) return;
    
    console.log('Sending AI message:', message);
    
    // Add user message
    addMessage(messagesContainer, message, 'user');
    input.value = '';
    
    // Add typing indicator
    addTypingIndicator(messagesContainer);
    
    // Generate AI response after delay
    setTimeout(() => {
        removeTypingIndicator(messagesContainer);
        const response = generateAiResponse(message);
        addMessage(messagesContainer, response, 'bot');
    }, 1500);
}

function generateAiResponse(message) {
    const lowerMessage = message.toLowerCase();
    
    if (lowerMessage.includes('—É—Å–ª—É–≥–∏') || lowerMessage.includes('—Å–µ—Ä–≤–∏—Å') || lowerMessage.includes('—á—Ç–æ –≤—ã –¥–µ–ª–∞–µ—Ç–µ')) {
        return chatbotData.ai.responses.services;
    }
    
    if (lowerMessage.includes('—Ü–µ–Ω–∞') || lowerMessage.includes('—Å—Ç–æ–∏–º–æ—Å—Ç—å') || lowerMessage.includes('—Å–∫–æ–ª—å–∫–æ')) {
        return chatbotData.ai.responses.pricing;
    }
    
    if (lowerMessage.includes('–ø–æ–¥–¥–µ—Ä–∂–∫–∞') || lowerMessage.includes('–ø–æ–º–æ—â—å') || lowerMessage.includes('—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è')) {
        return chatbotData.ai.responses.support;
    }
    
    if (lowerMessage.includes('—Å–∞–π—Ç') || lowerMessage.includes('—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞') || lowerMessage.includes('–≤–µ–±')) {
        return chatbotData.ai.responses.development;
    }
    
    if (lowerMessage.includes('–±–æ—Ç') || lowerMessage.includes('telegram') || lowerMessage.includes('–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è')) {
        return chatbotData.ai.responses.bots;
    }
    
    if (lowerMessage.includes('–∫–æ–Ω—Ç–∞–∫—Ç') || lowerMessage.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || lowerMessage.includes('—Å–≤—è–∑–∞—Ç—å—Å—è')) {
        return chatbotData.ai.responses.contact;
    }
    
    return chatbotData.ai.responses.default;
}

// Message functions - Enhanced implementation
function addMessage(container, text, type) {
    if (!container) return;
    
    const messageDiv = document.createElement('div');
    messageDiv.className = `chat-message chat-message--${type}`;
    
    const contentDiv = document.createElement('div');
    contentDiv.className = 'chat-message__content';
    contentDiv.textContent = text;
    
    messageDiv.appendChild(contentDiv);
    container.appendChild(messageDiv);
    
    // Scroll to bottom
    container.scrollTop = container.scrollHeight;
}

function addTypingIndicator(container) {
    if (!container) return;
    
    const typingDiv = document.createElement('div');
    typingDiv.className = 'chat-message chat-message--bot typing-message';
    typingDiv.innerHTML = '<div class="chat-message__content typing-indicator">–ü–µ—á–∞—Ç–∞–µ—Ç...</div>';
    
    container.appendChild(typingDiv);
    container.scrollTop = container.scrollHeight;
}

function removeTypingIndicator(container) {
    if (!container) return;
    
    const typingMessage = container.querySelector('.typing-message');
    if (typingMessage) {
        typingMessage.remove();
    }
}

// Contact form function
function handleContactForm() {
    const name = document.getElementById('name').value;
    const email = document.getElementById('email').value;
    const service = document.getElementById('service').value;
    const message = document.getElementById('message').value;
    
    // Simple validation
    if (!name || !email || !message) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è.');
        return;
    }
    
    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å.');
        return;
    }
    
    // Simulate form submission
    alert('–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
    
    // Reset form
    const form = document.querySelector('.contact__form');
    if (form) {
        form.reset();
    }
}

// Smooth animations on scroll
function animateOnScroll() {
    const elements = document.querySelectorAll('.service-card, .feature, .portfolio__card, .testimonial');
    
    if (!window.IntersectionObserver) return;
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('fade-in');
            }
        });
    }, {
        threshold: 0.1
    });
    
    elements.forEach(element => {
        observer.observe(element);
    });
}